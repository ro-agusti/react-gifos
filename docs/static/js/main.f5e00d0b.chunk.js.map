{"version":3,"sources":["components/AddCategory.js","components/GifsCard.js","helpers/getGifs.js","components/GiftGrid.js","hooks/useFetch.js","GitExpertApp/GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","oldState","type","value","onChange","target","placeholder","GifsCard","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","respuesta","json","data","gifs","map","img","images","downsized_medium","GiftGrid","loading","state","setState","useEffect","then","useFetch","GitExpertApp","categories","elemento","idx","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OA2CeA,EAvCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAsBA,OACI,sBAAMC,SAhBW,SAACC,GAClBA,EAAEC,iBAGEJ,EAAWK,OAAOC,QAClBL,EAAc,IAInBH,GAAc,SAAAS,GAAQ,OAAKP,GAAL,mBAAoBO,QAOzC,SACI,uBACIC,KAAK,OACLC,MAAOT,EACPU,SAzBW,SAACP,GACpB,IAAMM,EAAQN,EAAEQ,OAAOF,MACvBR,EAAcQ,IAwBNG,YAAa,0B,QCtBdC,G,MAVE,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAC1B,OACI,sBAAKC,UAAU,uBAAf,UAEG,qBAAKC,IAAKF,EAAKG,IAAI,SACnB,6BAAKJ,S,uBCNHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACJ,mCACTN,EAFa,sDACJ,mCADI,cAEoDO,UAAUF,GAF9D,sBAGKG,MAAMR,GAHX,cAGbS,EAHa,gBAIIA,EAAUC,OAJd,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATvB,kBAYZY,GAZY,4CAAH,sDCuBLK,G,MAnBE,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAEjB,ECHqB,SAACA,GACrB,MAA0BtB,mBAAS,CAC/B4B,KAAK,GACLO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAUA,OANAC,qBAAU,WACNjB,EAAQC,GAAUiB,MAAK,SAAAR,GAAG,OAAIM,EAAS,CACnCT,KAAKG,EACLI,SAAQ,SAEd,CAACb,IACIc,EDRuBI,CAASlB,GAA5BU,EAAZ,EAAOJ,KAAaO,EAApB,EAAoBA,QAElB,OACG,qCACI,6BAAKb,IACLa,GAAW,2CACZ,qBAAKjB,UAAU,YAAf,SAEQc,EAAOF,KAAI,SAAAC,GACP,OAAO,cAAC,EAAD,eAA2BA,GAAZA,EAAIhB,cEalC0B,EAxBM,WACjB,MAAoCzC,mBAAS,CAAC,SAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KACA,OACI,qCACE,iDACA,cAAC,EAAD,CACEA,cAAeA,IAEjB,uBACA,6BAEQ2C,EAAWZ,KAAI,SAACa,EAAUC,GACvB,OACI,cAAC,EAAD,CAEAtB,SAAUqB,GADLA,Y,MCZ9BE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f5e00d0b.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n    //modifica el input\r\n    const handleOnChange = (e) => {\r\n        const value = e.target.value\r\n        setInputValue(value)\r\n    }\r\n    //modifica el useCategories y agrega un li de acuerdo a lo q pongamos en el input\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        //vacia el input al clickear ENTER\r\n        if (inputValue.trim().length) {\r\n            setInputValue('')\r\n        }\r\n\r\n        //tomo el estado previo y le agrego el input value\r\n       setCategories(oldState => [inputValue, ...oldState ])\r\n\r\n       //otra opcion es usar el props de categories\r\n       //setCategories( [...categories, inputValue])\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type='text'\r\n                value={inputValue}\r\n                onChange={handleOnChange}\r\n                placeholder= 'Agrega un valor...'\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","import './GifsCard.scss'\r\nconst GifsCard = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__fadeIn\">\r\n           {/* <h2>{id}</h2> */}\r\n           <img src={url} alt=\"gifs\"/>\r\n           <h2>{title}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifsCard\r\n","export const getGifs = async (category) => {\r\n    const apiKey = 'SNJ9a5GbDjgSmOddC8ab03rQXLhxjPvS'\r\n    const url = `http://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${encodeURI(category)}&limit=10`\r\n    const respuesta = await fetch(url);\r\n    const { data } = await respuesta.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs\r\n}","import GifsCard from \"./GifsCard\";\r\nimport { useFetch } from '../hooks/useFetch';\r\nimport './GifsGrid.scss';\r\n\r\nconst GiftGrid = ({ category }) => {\r\n\r\n   const {data:images, loading} = useFetch(category);\r\n   \r\n     return (\r\n        <>\r\n            <h3>{category}</h3>\r\n           {loading && <p>Loading...</p>}\r\n           <div className=\"container\">\r\n               {\r\n                   images.map(img => {\r\n                       return <GifsCard key={img.id} {...img} />\r\n                   })\r\n               }\r\n           </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GiftGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetch = (category) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    })\r\n    useEffect(() => {\r\n        getGifs(category).then(img => setState({\r\n            data:img,\r\n            loading:false\r\n        }))\r\n    },[category])\r\n    return state\r\n}","import { useState } from \"react\"\r\nimport AddCategory from \"../components/AddCategory\"\r\nimport GiftGrid from \"../components/GiftGrid\"\r\n\r\nconst GitExpertApp = () => {\r\n    const [categories, setCategories] = useState(['goku'])\r\n    return (\r\n        <>\r\n          <h2>Giff Expert App</h2> \r\n          <AddCategory \r\n            setCategories={setCategories} \r\n          /> \r\n          <hr/>         \r\n          <ul>\r\n              {\r\n                  categories.map((elemento, idx) => {\r\n                     return (\r\n                         <GiftGrid \r\n                         key={elemento}\r\n                         category={elemento} />\r\n                     )\r\n                  })\r\n              }\r\n          </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GitExpertApp\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport GitExpertApp from './GitExpertApp/GitExpertApp';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GitExpertApp />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n/// SNJ9a5GbDjgSmOddC8ab03rQXLhxjPvS\r\n"],"sourceRoot":""}